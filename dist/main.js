/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./api.js":
/*!****************!*\
  !*** ./api.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addComment\": () => (/* binding */ addComment),\n/* harmony export */   \"getComments\": () => (/* binding */ getComments),\n/* harmony export */   \"loginUser\": () => (/* binding */ loginUser),\n/* harmony export */   \"registerUser\": () => (/* binding */ registerUser)\n/* harmony export */ });\nlet host = 'https://webdev-hw-api.vercel.app/api/v2/:natalvod1/comments';\r\n\r\nfunction getComments({ token }) {\r\n    return fetch(host, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Authorization: token,\r\n        }\r\n    }).then((response) => {\r\n        if (response.status === 200) {\r\n            return response.json();\r\n        } else if (response.status === 401) {\r\n            throw new Error(\"Нет авторизации\");\r\n        } else {\r\n            throw new Error(\"Сервер сломался, попробуй позже\")\r\n        }\r\n    });\r\n};\r\n\r\nfunction addComment({ name, text, date, forceError, token }) {\r\n    return fetch(host, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            name,\r\n            date,\r\n            text,\r\n            forceError,\r\n        }),\r\n        headers: {\r\n            Authorization: token,\r\n        }\r\n    }).then((response) => {\r\n\r\n        if (response.status === 201) {\r\n            return response.json();\r\n        } else if (response.status === 500) {\r\n            alert('Сервер не работает, повторите попытку позже')\r\n            throw new Error(\"Сервер сломался, попробуй позже\")\r\n        } else if (response.status === 400) {\r\n            alert('Имя и комментарий должны быть не короче 3 символов')\r\n            throw new Error(\"Имя и комментарий короче 3 символов\")\r\n        }\r\n    });\r\n};\r\n\r\nfunction registerUser({ login, password, name }) {\r\n    return fetch('https://webdev-hw-api.vercel.app/api/user', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n            name,\r\n        }),\r\n    }).then((response) => {\r\n\r\n        if (response.status === 400){\r\n            throw new Error (\"Такой пользователь уже существует\")\r\n          }\r\n          \r\n          return response.json()\r\n    });\r\n}\r\n\r\n//https://github.com/GlebkaF/webdev-hw-api/blob/main/pages/api/user/README.md\r\nfunction loginUser({ login, password }) {\r\n    return fetch('https://webdev-hw-api.vercel.app/api/user/login', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            login,\r\n            password,\r\n        }),\r\n    }).then((response) => {\r\n\r\n        if (response.status === 201) {\r\n            return response.json();\r\n        \r\n        } else if (response.status === 400) {\r\n            throw new Error(\"Неверный логин или пароль\")\r\n        }\r\n    });\r\n}\r\n\r\n// export function deleteComment({ token, id }) {\r\n//     return fetch('https://webdev-hw-api.vercel.app/api/v2/:natalvod/comments/' + id, {\r\n//         method: \"DELETE\",\r\n//         headers: {\r\n//             Authorization: token,\r\n//         },\r\n//     })\r\n//         .then((response) => {\r\n//             if (response.status === 200) {\r\n//                 return response.json();\r\n            \r\n//             } else {\r\n//                 throw new Error(\"Удаление не получилось\")\r\n//             }\r\n//         })\r\n// }\r\n\r\n\n\n//# sourceURL=webpack://webdev-dom-homework/./api.js?");

/***/ }),

/***/ "./components/login-component.js":
/*!***************************************!*\
  !*** ./components/login-component.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderLoginComponent\": () => (/* binding */ renderLoginComponent)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api.js */ \"./api.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"./index.js\");\n/* harmony import */ var _optionalFunction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../optionalFunction.js */ \"./optionalFunction.js\");\n\r\n\r\n\r\n\r\nfunction renderLoginComponent({ appEl, setToken, getFetchPromise }) {\r\n\r\nlet isLoginMode = true;\r\n\r\nconst renderForm = () => {\r\n    const commentHtml = _index_js__WEBPACK_IMPORTED_MODULE_1__.comments.map((comment, index) => {\r\n        return `<li class=\"comment\" data-name='${comment.name}' data-comment='${comment.text}'>\r\n      <div class=\"comment-header\">\r\n        <div>${comment.name}</div>\r\n        <div>${(0,_optionalFunction_js__WEBPACK_IMPORTED_MODULE_2__.myDate)(new Date(comment.date))}</div>\r\n      </div>\r\n      <div class=\"comment-body\">\r\n    \r\n        ${comment.isEdit ? `<textarea class= \"edit-area-text\" onclick = \"event.stopPropagation()\">${comment.text}</textarea>` : `<div class=\"comment-text\" data-index='${index}' data-name='${comment.name}' data-comment='${comment.text}'>${comment.text.replaceAll('*_', '<div class=\"quote\">').replaceAll('__*', '</div>')}</div>`}\r\n      \r\n      </div>\r\n      <div class=\"comment-footer\">\r\n       <div class=\"likes\">\r\n        <span class=\"likes-counter\">${comment.likes}</span>\r\n    \r\n        <button class=\"${comment.isLike ? \"like-button -active-like\" : \"like-button\"}\" data-index='${index}'></button>\r\n    \r\n        ${comment.isEdit ? `<button class=\"save-button button-comment\" data-index='${index}'>Сохранить</button>` : `<button class=\"edit-button button-comment\" data-index='${index}'>Редактировать</button>`}\r\n        \r\n        <button class = \"delete-button button-comment\" data-index='${index}'>Удалить комментарий</button>\r\n       </div>\r\n      </div>\r\n    </li>`\r\n      }).join('');\r\n\r\n    const appHtml = `\r\n    <section id=\"loaderComments\" class=\"loader -display-none\">\r\n    <h4 id=\"loaderText\" class=\"text-loader\">Комментарии загружаются...</h4>\r\n    </section>\r\n    <div class=\"container\">\r\n    <ul class=\"comments\">\r\n    <!-- список рендерится из js !!!!!!!-->\r\n    ${commentHtml}\r\n    </ul>\r\n  \r\n    <div class=\"add-form add-form--register\">\r\n      <h3>Чтобы добавить комментарий, авторизуйтесь</h3>\r\n      <h3 class=\"form-title\">Форма ${isLoginMode ? 'входа' : 'регистрации'}</h3>\r\n      ${\r\n        isLoginMode\r\n        ? \"\"\r\n        : `<input\r\n        type=\"text\"\r\n        class=\"add-form-name\"\r\n        placeholder=\"Введите имя\"\r\n        rows=\"4\"\r\n        value = \"\"\r\n        /><br/>`\r\n      }\r\n      \r\n      <input\r\n        type=\"text\"\r\n        class=\"add-form-login\"\r\n        placeholder=\"Введите логин\"\r\n        value=\"\"\r\n      /><br/>\r\n      <input\r\n        type=\"password\"\r\n        class=\"add-form-password\"\r\n        placeholder=\"Введите пароль\"\r\n        rows=\"4\"\r\n        value = \"\"\r\n      ></input>\r\n     \r\n      <div class=\"add-form-row\">\r\n      <button class=\"login-form-button\">${isLoginMode ? 'Войти' : 'Зарегистрироваться'}</button>\r\n      <button class=\"toggle-form-button\">Перейти ${isLoginMode ? 'к регистрации' : 'ко входу'}</button>\r\n      </div>\r\n    </div>`;\r\n\r\n    appEl.innerHTML = appHtml;\r\n\r\n    document.querySelector('.login-form-button').addEventListener('click', () => {\r\n        // setToken(\"Bearer asb4c4boc86gasb4c4boc86g37w3cc3bo3b83k4g37k3bk3cg3c03ck4k\");\r\n        if(isLoginMode) {\r\n            const login = document.querySelector('.add-form-login').value;\r\n            const password = document.querySelector('.add-form-password').value;\r\n    \r\n            if (!login) {\r\n                alert('Введите логин');\r\n                return;\r\n            }\r\n            if (!password) {\r\n                alert('Введите пароль');\r\n                return;\r\n            }\r\n    \r\n            (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.loginUser)({\r\n                login: login,\r\n                password: password,\r\n            }).then((user) => {\r\n                // console.log(user);\r\n                setToken(`Bearer ${user.user.token}`);\r\n                getFetchPromise();\r\n                //renderComments();\r\n            }).catch(error => {\r\n                alert(error.message)\r\n            });\r\n        } else {\r\n            const login = document.querySelector('.add-form-login').value;\r\n            const password = document.querySelector('.add-form-password').value;\r\n            const name = document.querySelector('.add-form-name').value;\r\n\r\n            if (!name) {\r\n                alert('Введите пароль');\r\n                return;\r\n            }   \r\n            if (!login) {\r\n                alert('Введите логин');\r\n                return;\r\n            }\r\n            if (!password) {\r\n                alert('Введите пароль');\r\n                return;\r\n            }\r\n            \r\n    \r\n            (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.registerUser)({\r\n                name: name,\r\n                login: login,\r\n                password: password,\r\n            }).then((user) => {\r\n                // console.log(user);\r\n                setToken(`Bearer ${user.user.token}`);\r\n                getFetchPromise();\r\n                //renderComments();\r\n            }).catch(error => {\r\n                alert(error.message)\r\n            });\r\n        }\r\n    });\r\n\r\n    document.querySelector('.toggle-form-button').addEventListener('click', () => {\r\n        isLoginMode = !isLoginMode;\r\n        renderForm();\r\n    });\r\n};\r\nrenderForm();\r\n}\n\n//# sourceURL=webpack://webdev-dom-homework/./components/login-component.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"comments\": () => (/* binding */ comments),\n/* harmony export */   \"getFetchPromise\": () => (/* binding */ getFetchPromise),\n/* harmony export */   \"listElement\": () => (/* binding */ listElement),\n/* harmony export */   \"loaderCommentsElement\": () => (/* binding */ loaderCommentsElement),\n/* harmony export */   \"renderComments\": () => (/* binding */ renderComments)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./api.js\");\n/* harmony import */ var _optionalFunction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optionalFunction.js */ \"./optionalFunction.js\");\n/* harmony import */ var _components_login_component_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/login-component.js */ \"./components/login-component.js\");\n\r\n\r\n\r\n\r\n\r\nconst listElement = document.querySelector('.comments');\r\nconst loaderCommentsElement = document.getElementById('loaderComments');\r\n\r\nlet comments = [];\r\n\r\n//функция GET\r\n\r\nlet token = \"Bearer asb4c4boc86gasb4c4boc86g37w3cc3bo3b83k4g37k3bk3cg3c03ck4k\";\r\ntoken = null;\r\n\r\nconst getFetchPromise = () => {\r\n  const loaderCommentsElement = document.getElementById('loaderComments');\r\n  loaderCommentsElement.classList.remove('-display-none');\r\n  return (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.getComments)({ token })\r\n    .then((responseData) => {\r\n      const appComments = responseData.comments.map((comment) => {\r\n        return {\r\n          name: comment.author.name,\r\n          date: new Date(comment.date),\r\n          text: comment.text,\r\n          likes: comment.likes,\r\n          isLike: false,\r\n          token,\r\n        };\r\n      })\r\n      comments = appComments;\r\n\r\n\r\n      loaderCommentsElement.classList.add('-display-none');\r\n      renderComments(listElement);\r\n    }).catch((error) => {\r\n      alert('Сервер не работает, повторите попытку позже');\r\n      console.warn(error);\r\n    });\r\n};\r\n\r\nconst renderComments = () => {\r\n  const commentHtml = comments.map((comment, index) => {\r\n    return `<li class=\"comment\" data-name='${comment.name}' data-comment='${comment.text}'>\r\n  <div class=\"comment-header\">\r\n    <div>${comment.name}</div>\r\n    <div>${(0,_optionalFunction_js__WEBPACK_IMPORTED_MODULE_1__.myDate)(new Date(comment.date))}</div>\r\n  </div>\r\n  <div class=\"comment-body\">\r\n\r\n    ${comment.isEdit ? `<textarea class= \"edit-area-text\" onclick = \"event.stopPropagation()\">${comment.text}</textarea>` : `<div class=\"comment-text\" data-index='${index}' data-name='${comment.name}' data-comment='${comment.text}'>${comment.text.replaceAll('*_', '<div class=\"quote\">').replaceAll('__*', '</div>')}</div>`}\r\n  \r\n  </div>\r\n  <div class=\"comment-footer\">\r\n   <div class=\"likes\">\r\n    <span class=\"likes-counter\">${comment.likes}</span>\r\n\r\n    <button class=\"${comment.isLike ? \"like-button -active-like\" : \"like-button\"}\" data-index='${index}'></button>\r\n\r\n    ${comment.isEdit ? `<button class=\"save-button button-comment\" data-index='${index}'>Сохранить</button>` : `<button class=\"edit-button button-comment\" data-index='${index}'>Редактировать</button>`}\r\n    \r\n   <button class = \"delete-button button-comment\" data-id='${comment.id}'>Удалить комментарий</button>\r\n   </div>\r\n  </div>\r\n</li>`\r\n  }).join('');\r\n\r\n  const appEl = document.getElementById('app');\r\n\r\n  const appHtml = `\r\n  <section id=\"loaderComments\" class=\"loader -display-none\">\r\n    <h4 id=\"loaderText\" class=\"text-loader\">Комментарии загружаются...</h4>\r\n  </section>\r\n<div class=\"container\">\r\n  <ul class=\"comments\">\r\n  <!-- список рендерится из js !!!!!!!-->\r\n  ${commentHtml}\r\n  </ul>\r\n  <div class=\"add-form\">\r\n    <input\r\n      type=\"text\"\r\n      class=\"add-form-name\"\r\n      placeholder=\"Введите ваше имя\"\r\n      value=\"\"\r\n    />\r\n    <textarea\r\n      type=\"textarea\"\r\n      class=\"add-form-text\"\r\n      placeholder=\"Введите ваш комментарий\"\r\n      rows=\"4\"\r\n      value = \"\"\r\n    ></textarea>\r\n    <div class=\"add-form-row\">\r\n      <button class=\"add-form-button\">Написать</button>\r\n      <button class=\"add-form-button add-form-button--remove\">Удалить последний комментарий</button>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\n  if (!token) {\r\n    (0,_components_login_component_js__WEBPACK_IMPORTED_MODULE_2__.renderLoginComponent)({\r\n      appEl,\r\n      commentHtml,\r\n      setToken: (newToken) => {\r\n        token = newToken;\r\n      },\r\n      getFetchPromise,\r\n    });\r\n    return;\r\n  }\r\n\r\n  appEl.innerHTML = appHtml;\r\n\r\n  const buttonElement = document.querySelector('button.add-form-button');\r\n  const listElement = document.querySelector('.comments');\r\n  const inputNameElement = document.querySelector('.add-form-name');\r\n  const textareaElement = document.querySelector('.add-form-text'); //export const loaderCommentsElement = document.getElementById('loaderComments');\r\n  const addFormElement = document.querySelector('.add-form');\r\n\r\n\r\n  buttonElement.addEventListener('click', () => {\r\n    inputNameElement.classList.remove('error');\r\n    textareaElement.classList.remove('error')\r\n    if (!inputNameElement.value || !textareaElement.value) {\r\n      inputNameElement.classList.add('error');\r\n      textareaElement.classList.add('error');\r\n      return;\r\n    };\r\n\r\n    buttonElement.disabled = true;\r\n    buttonElement.textContent = \"Добавляется...\"\r\n    addFormElement.classList.add('-display-block');\r\n\r\n    (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.addComment)({\r\n      name: (0,_optionalFunction_js__WEBPACK_IMPORTED_MODULE_1__.secureInput)(inputNameElement.value),\r\n      date:\r\n        //new Date(),\r\n        (0,_optionalFunction_js__WEBPACK_IMPORTED_MODULE_1__.myDate)(new Date()),\r\n      text: (0,_optionalFunction_js__WEBPACK_IMPORTED_MODULE_1__.secureInput)(textareaElement.value),\r\n      forceError: false,\r\n      token,\r\n    }).then(() => {\r\n      return getFetchPromise();\r\n    })\r\n      .then((response) => {\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = \"Написать\"\r\n        inputNameElement.value = '';\r\n        textareaElement.value = '';\r\n        return response\r\n      }).catch((error) => {\r\n        addFormElement.classList.remove('-display-block')\r\n        buttonElement.disabled = false;\r\n        buttonElement.textContent = 'Написать';\r\n        if (!navigator.onLine) {\r\n          alert('Кажется, у вас сломался интернет, попробуйте позже')\r\n          // throw new Error(\"Сломался интернет\")\r\n        }\r\n        console.warn(error);\r\n      });\r\n    renderComments(listElement);\r\n    buttonElement.disabled = true;\r\n    addFormElement.classList.remove('-display-block')\r\n  });\r\n\r\n  const initChangeLikeButtonListeners = () => {\r\n    const likeButtonElements = document.querySelectorAll('.like-button');\r\n\r\n    for (const likeButtonElement of likeButtonElements) {\r\n      likeButtonElement.addEventListener('click', (event) => {\r\n        event.stopPropagation();\r\n        const index = likeButtonElement.dataset.index;\r\n\r\n        if (comments[index].isLike === false) {\r\n          comments[index].likes += 1;\r\n          comments[index].isLike = true;\r\n\r\n\r\n        } else {\r\n          comments[index].likes -= 1;\r\n          comments[index].isLike = false;\r\n        }\r\n\r\n        renderComments(listElement);\r\n      })\r\n    }\r\n  };\r\n\r\n  const initEditButtonListeners = () => {\r\n    const editButtons = document.querySelectorAll(\".edit-button\");\r\n    for (const editButton of editButtons) {\r\n      editButton.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n        const index = editButton.dataset.index;\r\n\r\n        if (comments[index].isEdit === false) {\r\n          comments[index].isEdit = true;\r\n\r\n        } else {\r\n          comments[index].isEdit = false;\r\n          const textareaEditElements = document.querySelectorAll(\".edit-area-text\");\r\n          for (const textareaEditElement of textareaEditElements) {\r\n            comments[index].text = textareaEditElement.value;\r\n          }\r\n        }\r\n        renderComments(listElement);\r\n      })\r\n    };\r\n    const saveButtons = document.querySelectorAll(\".save-button\");\r\n    for (const saveButton of saveButtons) {\r\n      saveButton.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n        const index = saveButton.dataset.index;\r\n        if (comments[index].isEdit === false) {\r\n          comments[index].isEdit = true;\r\n        } else {\r\n          comments[index].isEdit = false;\r\n          const textareaEditElements = document.querySelectorAll(\".edit-area-text\");\r\n          for (const textareaEditElement of textareaEditElements) {\r\n            comments[index].text = textareaEditElement.value;\r\n          }\r\n        }\r\n        renderComments(listElement)\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  const answerQuoteToComment = () => {\r\n    const commentListItems = document.querySelectorAll('.comment');\r\n    for (const commentListItem of commentListItems) {\r\n      commentListItem.addEventListener('click', () => {\r\n        const userName = commentListItem.dataset.name;\r\n        const userComment = commentListItem.dataset.comment;\r\n        textareaElement.value = `*_${userName}: \\n${userComment}__*`;\r\n      })\r\n    }\r\n  }\r\n\r\n  const deleteComment = () => {\r\n    const deleteButtonElements = document.querySelectorAll('.delete-button');\r\n    for (const deleteButtonElement of deleteButtonElements) {\r\n      deleteButtonElement.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n        const index = deleteButtonElement.dataset.index;\r\n        comments.splice(index, 1);\r\n        renderComments(listElement);\r\n      });\r\n    }\r\n  };\r\n\r\n  //Удаление комментария из API(не получается)\r\n\r\n  // const deleteButtonElements = document.querySelectorAll('.delete-button');\r\n  // for (const deleteButtonElement of deleteButtonElements) {\r\n  //   deleteButtonElement.addEventListener('click', (e) => {\r\n  //     e.stopPropagation();\r\n  //     const id = deleteButtonElement.dataset.id;\r\n\r\n  //     deleteComment({ token, id })\r\n  //     .then((responseData) => {\r\n  //       comments = responseData.comments;\r\n  //       //renderComments(listElement);\r\n  //       //getComments();\r\n  //       renderComments(listElement);\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  const deleteLastComment = () => {\r\n    const deleteLastButtonElement = document.querySelector('.add-form-button--remove');\r\n\r\n    deleteLastButtonElement.addEventListener('click', () => {\r\n      comments.pop();\r\n      renderComments(listElement);\r\n    });\r\n  };\r\n\r\n  const validateButton = () => {\r\n    if (!inputNameElement.value || !textareaElement.value) {\r\n      buttonElement.disabled = true;\r\n    } else buttonElement.disabled = false;\r\n  }\r\n\r\n  const initDisabledButtonElement = () => {\r\n    validateButton();\r\n    document.querySelectorAll(\".add-form-text,.add-form-name\").forEach((input) => {\r\n      input.addEventListener(\"input\", () => {\r\n        validateButton();\r\n      });\r\n    });\r\n  };\r\n\r\n  const pushEnter = () => {\r\n    addFormElement.addEventListener('keyup', (ent) => {\r\n      if (ent.code === \"Enter\") {\r\n        buttonElement.click();\r\n        inputNameElement.value = '';\r\n        textareaElement.value = '';\r\n      }\r\n    });\r\n  }\r\n  pushEnter();\r\n  initChangeLikeButtonListeners();\r\n  initEditButtonListeners();\r\n  initDisabledButtonElement();\r\n  answerQuoteToComment();\r\n  deleteComment();\r\n  deleteLastComment();\r\n}\r\n\r\nrenderComments(listElement)\r\ngetFetchPromise();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webdev-dom-homework/./index.js?");

/***/ }),

/***/ "./optionalFunction.js":
/*!*****************************!*\
  !*** ./optionalFunction.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"myDate\": () => (/* binding */ myDate),\n/* harmony export */   \"secureInput\": () => (/* binding */ secureInput)\n/* harmony export */ });\n//рендер даты\r\n\r\nconst myDate = (date) => {\r\n    const getDate = new Date(date);\r\n    const options = {\r\n      year: \"2-digit\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      timezone: \"UTC\",\r\n      hour: \"numeric\",\r\n      minute: \"2-digit\"\r\n    };\r\n    \r\n    options.hour = \"2-digit\";\r\n    return getDate.toLocaleDateString(\"ru-Ru\", options).split(', ').join(' ');\r\n  }\r\n// export const myDate = () => {\r\n//     const getDate = new Date();\r\n//     const options = {\r\n//       year: \"2-digit\",\r\n//       month: \"2-digit\",\r\n//       day: \"2-digit\",\r\n//       timezone: \"UTC\",\r\n//       hour: \"numeric\",\r\n//       minute: \"2-digit\"\r\n//     };\r\n    \r\n//     options.hour = \"2-digit\";\r\n//     return getDate.toLocaleDateString(\"ru-Ru\", options).split(', ').join(' ');\r\n//   }\r\n\r\n  //обезопасить ввод данных пользователя\r\n  \r\n  // export const secureInput = (safeText) => {\r\n  //   return safeText.replaceAll(\"<\", \"&lt;\")\r\n  //     .replaceAll(\">\", \"&gt;\")\r\n  //   //.replaceAll(\"&\", \"&amp;\")\r\n  //   //.replaceAll('\"', \"&quot;\");\r\n  // }\r\n  function secureInput(safeText){\r\n    return safeText.replaceAll(\"<\", \"&lt;\")\r\n      .replaceAll(\">\", \"&gt;\")\r\n    //.replaceAll(\"&\", \"&amp;\")\r\n    //.replaceAll('\"', \"&quot;\");\r\n  }\n\n//# sourceURL=webpack://webdev-dom-homework/./optionalFunction.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;